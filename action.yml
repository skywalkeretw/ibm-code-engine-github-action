name: Code Engine Deploy
description: Github action to deploy Apps, Jobs and Functions to IBM Cloud Code Engine
author: Skywalker_etw

branding:
  icon: cloud
  color: blue

inputs:
  api-key:
    description: IAM API Key used to log into the IBM Cloud
    required: true

  resouce-groupe:
    description: An IBM Cloud Resource Group is a logical container used to organize and manage related cloud resources
    required: false
    default: Default

  region:
    description: The Region refers to a geographical area where the project is are located
    required: true

  project:
    description: A Code Engine Project Is the grouping of your Apps, Functions and Jobs
    required: true

# App, Function or Job Specific inputs
  entity:
    description: The type of entity that should be deployed [App, Function, Job]
    required: true

  name: 
    description: Name of the App, Function or Job
    required: true
  
  runtime:
    description: Runtime used for the Function only required for function
    required: true

  build-source:
    description: path to the directory containing the source code 
    required: false
    default: .

runs:
  using: composite
  steps:
    # Default steps required
    - name: Install IBM Cloud CLI
      shell: bash
      run: curl -fsSL https://clis.cloud.ibm.com/install/linux | sh
    
    - name: Login to IBM Cloud And target Resouce Groupe and Region
      shell: bash
      run: ibmcloud login --apikey ${{ inputs.api-key }} -r ${{ inputs.region }} -g ${{ inputs.resouce-groupe }}

    - name: Install Code Engine Plugin
      shell: bash
      run: ibmcloud plugin install code-engine

    - name: Select Code Engine Project
      shell: bash
      run: ibmcloud ce project select --name ${{ inputs.project }}

    # Functions Steps
    - name: Create Functions
      shell: bash
      id: function-create
      if: inputs.entity == 'function' || inputs.entity == 'func'
      run: |
        ibmcloud ce fn create --name ${{ inputs.name }} --runtime ${{ inputs.runtime }} --build-source ${{ inputs.build-source }}
    
    - name: Update Functions
      shell: bash
      if: failure() && steps.function-create.outcome == 'failure' && ( inputs.entity == 'function' || inputs.entity == 'func' )
      run: |
        ibmcloud ce fn update --name ${{ inputs.name }} --runtime ${{ inputs.runtime }} --build-source ${{ inputs.build-source }}

    # Application Steps
    - name: Create Application
      shell: bash
      id: create-app
      if: inputs.entity == 'application' || inputs.entity == 'app'
      run: |
        ibmcloud ce application create --name ${{ inputs.name }} --build-source ${{ inputs.build-source }}

    - name: Deploy App
      shell: bash
      if: failure() && steps.create-app.outcome == 'failure' && ( inputs.entity == 'application' || inputs.entity == 'app') 
      run: |
        ibmcloud ce application update --name ${{ inputs.name }} --build-source ${{ inputs.build-source }}

    # Job Steps
    - name: Create Application
      shell: bash
      id: create-job
      if: inputs.entity == 'job' 
      run: |
        ibmcloud ce job create --name ${{ inputs.name }} --build-source ${{ inputs.build-source }} --wait

    - name: Deploy App
      shell: bash
      if: failure() && steps.create-app.outcome == 'failure' && inputs.entity == 'job' 
      run: |
        ibmcloud ce job create --name ${{ inputs.name }} --build-source ${{ inputs.build-source }} --wait
   